/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isValidBST(TreeNode root) {
         return utilfun(root,Integer.MIN_VALUE,Integer.MAX_VALUE);
    }
  boolean utilfun(TreeNode root,int low,int high)
  {
    if(root==null)
    {
      return true;
    }
    int curr=root.val;
    boolean a;
    if(curr>=low&&curr<=high)
    {
      a=true;
    }
    else
      a=false;
      if(curr!=Integer.MIN_VALUE&&curr!=Integer.MAX_VALUE)
      return a && utilfun(root.left,low,curr-1) && utilfun(root.right,curr+1,high);
      else if(curr==Integer.MIN_VALUE)
        return a && (root.left==null)&&utilfun(root.right,curr+1,high);
        return a && utilfun(root.left,low,curr-1)&& (root.right==null);
  }
}
