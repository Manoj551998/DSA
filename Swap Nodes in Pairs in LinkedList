import java.util.Scanner;
import java.util.Stack;
class Node
{
	int data;
	Node next;
	Node(int data)
	{
		this.data=data;
		next=null;
	}
}

class ListMethods
{
	Node head;
	ListMethods()
	{
		head=null;
	}
	void add(int val)
	{
		
		
		if(head==null)
		{
			head=new Node(val);
			return;
			
		}
		Node curr=head;
		while(curr.next!=null)
		{
			curr=curr.next;
		}
		curr.next=new Node(val);
		
	}
	void adj_Swap()
	{
		Node curr=head;
		if(curr==null||curr.next==null)
		{
			return;
		}
		Node prev=null;
		Node nxt=curr.next;
		Node newhead=nxt;
		head=newhead;
		
		while(curr!=null && nxt!=null)
		{
			 curr.next=nxt.next;
			 nxt.next=curr;
			 if(prev!=null)
			 {
				 prev.next=nxt;
			 }
			 prev=curr;
			 curr=curr.next;
			 if(curr!=null)
			 {
				 nxt=curr.next; 
			 }
			 
		}
	
	}
	
	void traverse()
	{
		Node curr=head;
		while(curr!=null)
		{
			System.out.print(curr.data+"-->");
			curr=curr.next;
		}
		System.out.println("null");
	}
	
}


class DecryptString {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		ListMethods lm=new ListMethods();
		int limit=sc.nextInt();int i=0;
		while(i<limit)
		{
			lm.add(sc.nextInt());
			i++;
		}
		System.out.println("Traversal below");
		lm.traverse();
		lm.adj_Swap();
		System.out.println("Traversal below");
		lm.traverse();
		
		
	}

}
